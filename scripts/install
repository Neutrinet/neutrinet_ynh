#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers
source _common.sh

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
app=$YNH_APP_INSTANCE_NAME
app_user=$app

#==================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#==================================================

www_path=/var/www/$app
if [[ -e $www_path ]]
then
  ynh_die "The path $www_path already contains a folder"
fi

opt_path=/opt/$app
if [[ -e $opt_path ]]
then
  ynh_die "The path $opt_path already contains a folder"
fi

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Check web path availability
if ! ynh_webpath_available $domain $path_url
then
  ynh_die "$domain$path_url is not available"
fi

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path_url $path_url
ynh_app_setting_set $app app_user $app_user
ynh_app_setting_set $app www_path $www_path
ynh_app_setting_set $app opt_path $opt_path

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_print_info "Installing dependencies..."

ynh_package_update
ynh_install_app_dependencies git python3-venv libssl-dev libffi-dev python3-dev

#=================================================
# CREATE DEDICATED USER
#=================================================

mkdir --parents $www_path
useradd $app_user --home-dir=$www_path

#=================================================
# INSTALL STATIC FILE
#=================================================

ynh_print_info "Installing static site..."

cp -a ../sources/. $www_path
chown -R $app_user: $www_path

sed -i "s@PATHTOCHANGE@$path_url@g" ../conf/nginx.conf
sed -i "s@ALIASTOCHANGE@$www_path@g" ../conf/nginx.conf

cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

service nginx reload

#=================================================
# INSTALL RENEW CERT
#=================================================

renew_cert_repo="https://github.com/neutrinet/renew_cert"
renew_cert_revision="b3c49c23d2ad3107a52d845a8ac12476b57be33e"
renew_cert_path="$opt_path/renew_cert"
renew_cert_virtualenv="$renew_cert_path/ve"
renew_cert_python="$renew_cert_virtualenv/bin/python3"
renew_cert_cron_script="renew_cert_cron.sh"

ynh_print_info "Installing automatic VPN certificate renewal..."

git clone $renew_cert_repo $renew_cert_path
git -C $renew_cert_path checkout $renew_cert_revision

# We wrap the python3 script that actually renew the VPN certificate
# This wrapper will be used as a daily cron task
cp $renew_cert_cron_script $renew_cert_path/$renew_cert_cron_script

# From now on we work in the renew_cert directory
cd $renew_cert_path

# We need system site packages otherwise moulinette is broken
python3 -m venv $renew_cert_virtualenv --system-site-packages
ve/bin/pip install wheel
ve/bin/pip install -r requirements.txt

ynh_print_info "Setting up permissions"
chown -R $app_user: $opt_path

chmod 755 $renew_cert_cron_script
chown root: $renew_cert_cron_script

#=================================================
# SETTING UP CRONTAB
#=================================================

ynh_print_info "Setting up cron job for renewal..."

cat <<EOF > /etc/cron.daily/$app-renew-cert
#!/bin/bash
cd $renew_cert_path
RENEW_CERT_PYTHON="$renew_cert_virtualenv" $renew_cert_path/$renew_cert_cron_script
EOF

chown root:root /etc/cron.daily/$app-renew-cert
chmod 0755 /etc/cron.daily/$app-renew-cert

#=================================================
# FINALIZATION
#=================================================

ynh_print_info "Checking certificates..."
/etc/cron.daily/$app-renew-cert
