#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers
source _common.sh

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
app=$YNH_APP_INSTANCE_NAME
app_user=$app

#==================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#==================================================

www_path=/var/www/$app
test ! -e "$www_path" || ynh_die "The path $www_path already contains a folder"

opt_path=/opt/$app
test ! -e "$opt_path" || ynh_die "The path $opt_path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Check web path availability
ynh_webpath_available $domain $path_url || ynh_die "$domain$path_url is not available"
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path_url $path_url
ynh_app_setting_set $app app_user $app_user
ynh_app_setting_set $app www_path $www_path
ynh_app_setting_set $app opt_path $opt_path

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_print_info "Installing dependencies..."

apt-get update
ynh_install_app_dependencies git virtualenv python-virtualenv

#=================================================
# CREATE DEDICATED USER
#=================================================

mkdir --parents $www_path
useradd $app_user --home-dir=$www_path

#=================================================
# INSTALL STATIC FILE
#=================================================

ynh_print_info "Installing static site..."

cp -a ../sources/. $www_path
chown -R $app_user: $www_path

sed -i "s@PATHTOCHANGE@$path_url@g" ../conf/nginx.conf
sed -i "s@ALIASTOCHANGE@$www_path@g" ../conf/nginx.conf

cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

service nginx reload

#=================================================
# INSTALL REWEW CERT
#=================================================

ynh_print_info "Installing automatic vpn certificate renewal..."

git clone https://github.com/neutrinet/renew_cert $opt_path/renew_cert
(cd $opt_path/renew_cert; git checkout 01b9306e51e74a2dac5b06f3fb6c29a0fb2fe755)

# We need system site packages otherwise moulinette is broken
(cd $opt_path/renew_cert; virtualenv ve --system-site-packages)
(cd $opt_path/renew_cert; ve/bin/pip install -r requirements.txt)

chown -R $app_user: $opt_path

#=================================================
# SETTING UP CRONTAB
#=================================================

ynh_print_info "Setting up cron job for renewal..."

cat <<EOF > /etc/cron.daily/$app-renew-cert
#!/bin/bash
cd $opt_path/renew_cert
ve/bin/python renew_from_cube.py --cron
EOF

chown root:root /etc/cron.daily/$app-renew-cert
chmod 0755 /etc/cron.daily/$app-renew-cert

#=================================================
# FINALIZATION
#=================================================

# If vpn is not running, we assume that this means that the vpn is broken
if [[ ! "$(grep '^port 1195' /etc/openvpn/client.conf)" ]]; then
    ynh_print_info "Renewing certificates..."
    (cd $opt_path/renew_cert; ve/bin/python renew_from_cube.py)
fi

