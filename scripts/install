#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# TODO: I assume this happens because of the manifest now?
#  sudo yunohost app setting neutrinet version -v "0.3"

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
app=$YNH_APP_INSTANCE_NAME
app_user="www-data"

#==================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#==================================================

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "The path $final_path already contains a folder"

renew_cert_path=/opt/$app/renew_cert
test ! -e "$renew_cert_path" || ynh_die "The path $renew_cert_path already contains a folder"

# Normalize the url path syntax
path=$(ynh_normalize_url_path $path)

# Check web path availability
ynh_webpath_available $domain $path
# Register (book) web path
ynh_webpath_register $app $domain $path

#=================================================
# STORE SETTINGS
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path
ynh_app_setting_set $app app_user $app_user
ynh_app_setting_set $app final_path $final_path
ynh_app_setting_set $app renew_cert_path $renew_cert_path

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_print_info "Installing dependencies..."

apt-get update
ynh_install_app_dependencies git virtualenv python-virtualenv

#=================================================
# CREATE DEDICATED USER
#=================================================

# Now www-data is used. Check if this is really needed
# We'll keep using www-data for now
# if not needed:
#  app_user=$app
#  ynh_app_setting_set $app app_user $app_user
mkdir --parents $final_path
#  useradd $app_user --home-dir=$final_path

#=================================================
# INSTALL STATIC FILE
#=================================================

ynh_print_info "Installing static site..."

cp -a ../sources/. $final_path
chown -R $app_user: $final_path

sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
sed -i "s@ALIASTOCHANGE@$final_path@g" ../conf/nginx.conf

cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/neutrinet.conf

service nginx reload

#=================================================
# INSTALL REWEW CERT
#=================================================

ynh_print_info "Installing automatic vpn certificate renewal..."

git clone https://github.com/neutrinet/renew_cert $renew_cert_path
# TODO: Is the || true needed?
(cd $renew_cert_path; git checkout 01b9306e51e74a2dac5b06f3fb6c29a0fb2fe755 || true)

# We need system site packages otherwise moulinette is broken
(cd $renew_cert_path; virtualenv ve --system-site-packages)
(cd $renew_cert_path; ve/bin/pip install -r requirements.txt)

#=================================================
# SETTING UP CRONTAB
#=================================================

ynh_print_info "Setting up cron job for renewal..."

# TODO: Is it ok that root does this? Maybe this should be `su - www-data -c "ve/bin/python renew_from_cube.py --cron"` (or even $app_user?)
cat <<EOF > /etc/cron.daily/neutrinet-renew-cert
#!/bin/bash
cd $renew_cert_path
ve/bin/python renew_from_cube.py --cron
EOF

chown root:root /etc/cron.daily/neutrinet-renew-cert
chmod 0755 /etc/cron.daily/neutrinet-renew-cert

# TODO: What to do with the packagelists?
<<EOF
install_neutrinet_apps_list() {
    if ! sudo yunohost app listlists | grep -q "neutrinet:"; then
      sudo yunohost app fetchlist -n neutrinet -u https://neutrinet.be/apps.json
    fi
}

install_labriqueinternet_apps_list() {
    if ! sudo yunohost app listlists | grep -q "labriqueinternet:"; then
      sudo yunohost app fetchlist -n labriqueinternet -u https://labriqueinter.net/apps/labriqueinternet.json
    fi
}

install_neutrinet_apps_list
install_labriqueinternet_apps_list
EOF

#=================================================
# SETUP SSOWAT
#=================================================

# Check what to do to keep it private (is it private by default?)


#=================================================
# FINALIZATION
#=================================================

# If vpn is not running, we assume that this means that the vpn is broken
if [[ ! "$(grep '^port 1195' /etc/openvpn/client.conf)" ]]; then
    (cd $renew_cert_path; ve/bin/python renew_from_cube.py) # TODO: Is it ok that root does this? Maybe this should be `su - www-data -c "ve/bin/python renew_from_cube.py --cron"` (or even $app_user?)
fi

