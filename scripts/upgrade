#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers
source _common.sh

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

app=$YNH_APP_INSTANCE_NAME
version=$(sudo yunohost app setting $app version)

if [[ "$version" < "0.3.0~ynh1" ]]; then
  ynh_print_info "Ensuring backwards compatibility..."
  ynh_print_warning "Reinstalling this app from the Neutrinet application list is advised over updating!"
  ynh_print_warning "But if you want to yolo it, we're not gonna stop you ;)"

  # 0.1.1 -> 0.2
  if [[ "$version" == "0.1.1" ]]; then
    yunohost app setting $app version -v "0.2"
    version="0.2"
  fi

  # 0.2 -> 0.2.1
  if [[ "$version" == "0.2" ]]; then
    opt_path=/opt/$app
    yunohost app setting $app version -v "0.2.1"
    version="0.2.1"

    cd $opt_path/renew_cert
    ve/bin/python renew_from_cube.py
  fi

  # 0.2.1 -> 0.2.2
  if [[ "$version" == "0.2.1" ]]; then
    opt_path=/opt/$app
    yunohost app setting $app version -v "0.2.2"
    version="0.2.2"

    cd $opt_path/renew_cert
    git fetch
    git checkout 01b9306e51e74a2dac5b06f3fb6c29a0fb2fe755
    ve/bin/python renew_from_cube.py --cron

    cat <<EOF > /etc/cron.daily/$app-renew-cert
  #!/bin/bash
  cd $opt_path/renew_cert
  ve/bin/python renew_from_cube.py --cron
  EOF
    chown root:root /etc/cron.daily/$app-renew-cert
    chmod 0755 /etc/cron.daily/$app-renew-cert
  fi

  # 0.2.2 -> 0.2.3
  if [[ "$version" == "0.2.2" ]]; then
    www_path=/var/www/$app/

    mkdir -p $www_path
    cp -a ../sources/. $www_path
    chown -R www-data: $www_path

    yunohost app setting $app version -v "0.2.3"
    version="0.2.3"
  fi

  # 0.2.3 -> 0.3.0~ynh1
  if [[ "$version" == "0.2.3" ]]; then
    domain=$(yunohost app setting $app domain)
    path_url=$(yunohost app setting $app path_url)
    app_user="www-data"

    www_path=/var/www/$app
    opt_path=/opt/$app
    path_url=$(ynh_normalize_url_path $path_url)

    ynh_app_setting_set $app domain $domain
    ynh_app_setting_set $app path $path_url
    ynh_app_setting_set $app app_user $app_user
    ynh_app_setting_set $app www_path $www_path
    ynh_app_setting_set $app opt_path $opt_path

    sudo yunohost app setting $app version -v "0.3.0~ynh1"
    version="0.3.0~ynh1"
  fi
fi
# From here on we shouldn't check for explicit version numbers since the package sets it
# Even though we have the backwards compatibility, reinstalling is advised over updating
# When reinstalling, please use an application list instead of git-url so that new available updates will be checked
# Post 0.3.0~ynh1 upgrades should be done after this block

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path_url)
app_user=$(ynh_app_setting_get $app app_user)
www_path=$(ynh_app_setting_get $app www_path)
opt_path=$(ynh_app_setting_get $app opt_path)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

ynh_print_info "Creating backup..."

ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# PULL CHANGES AND SPECIFIC SETUP
#=================================================

ynh_print_info "Doing actual upgrade..."

